// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String          @map("first_name")
  lastName      String          @map("last_name")
  email         String          @unique
  password      String
  phone         String
  address       String
  gender        String
  role          String          @default("user")
  birthDay      DateTime        @map("birth_day")
  pay           Pay[]
  trainer       Trainer[]
  excercisePlan ExcercisePlan[]
  mealPlan      MealPlan[]
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map("users")
}

model Pay {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Trainer {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ExcercisePlan {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MealPlan {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
